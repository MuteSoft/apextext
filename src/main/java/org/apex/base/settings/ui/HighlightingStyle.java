/*
 * HighlightingStyle.java
 * Created on 12 July, 2007, 1:19 AM
 *
 * Copyright (C) 2008 Mrityunjoy Saha
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package org.apex.base.settings.ui;

import org.apex.base.data.HighlightCategories;
import org.apex.base.util.ConfigurationUtility;
import org.apex.base.settings.HighlightColor;
import org.apex.base.settings.HighlightStyleConfiguration;
import org.apex.base.settings.ui.text.UIConfigurationDataModel;
import org.apex.base.settings.ui.text.UIConfigurationUtility;
import java.awt.Color;
import java.util.Vector;

/**
 * A form to assign or update highlight colors.
 * @author Mrityunjoy Saha
 * @version 1.0
 * @since Apex 1.0
 */
public class HighlightingStyle extends javax.swing.JPanel implements
        UIConfigurationDataModel {

    /**
     * The highlight style configuration.
     */
    private HighlightStyleConfiguration highlightStyleConfig;
    /**
     * The selected highlight category.
     */
    private String selectedCategory;
    /**
     * The {@code HighlightColor} for selected highlight category.
     */
    private HighlightColor selectedHighlightColors;

    /**
     * Creates new form {@code HighlightingStyle} using given highlight style configuration.
     * @param highlightStyleConfig The highlight style configuration.
     */
    public HighlightingStyle(
            HighlightStyleConfiguration highlightStyleConfig) {
        this.highlightStyleConfig = highlightStyleConfig;
        initComponents();
        applyConfiguration();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane7 = new javax.swing.JScrollPane();
        categories = new javax.swing.JList();
        categoryTitle = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        foregroundColorTitle = new javax.swing.JLabel();
        backgroundColorTitle = new javax.swing.JLabel();
        highlightingFGLabel = new javax.swing.JLabel();
        highlightingBGLabel = new javax.swing.JLabel();
        highlightingFGChooser = new javax.swing.JButton();
        highlightingBGChooser = new javax.swing.JButton();
        sampleHighlightingFG = new javax.swing.JTextField();
        sampleHighlightingBG = new javax.swing.JTextField();

        categories.setFont(new java.awt.Font("Tahoma", 1, 11));
        categories.setModel(UIConfigurationUtility.getListModel(getHighlightCategories()));
        categories.setSelectedIndex(0);
        categories.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                categoriesValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(categories);

        categoryTitle.setText("Category:"); // NOI18N

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 0, 204))); // NOI18N

        foregroundColorTitle.setText("Foreground:"); // NOI18N

        backgroundColorTitle.setText("Background:"); // NOI18N

        highlightingFGLabel.setText(" "); // NOI18N

        highlightingBGLabel.setText(" "); // NOI18N

        highlightingFGChooser.setText("jButton7"); // NOI18N
        highlightingFGChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highlightingFGChooserHandler(evt);
            }
        });

        highlightingBGChooser.setText("jButton8"); // NOI18N
        highlightingBGChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highlightingBGChooserHandler(evt);
            }
        });

        sampleHighlightingFG.setEnabled(false);

        sampleHighlightingBG.setEnabled(false);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backgroundColorTitle)
                    .addComponent(foregroundColorTitle))
                .addGap(12, 12, 12)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sampleHighlightingFG, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sampleHighlightingBG, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(highlightingBGLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(highlightingFGLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(highlightingFGChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(highlightingBGChooser, 0, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foregroundColorTitle)
                    .addComponent(sampleHighlightingFG, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(highlightingFGChooser)
                    .addComponent(highlightingFGLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backgroundColorTitle)
                    .addComponent(sampleHighlightingBG, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(highlightingBGChooser)
                    .addComponent(highlightingBGLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(categoryTitle)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(categoryTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void categoriesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_categoriesValueChanged
        this.selectedCategory = (String) categories.getSelectedValue();
        this.selectedHighlightColors =
                this.highlightStyleConfig.getHighlightColor(selectedCategory);
        displayHighlightColors();
    }//GEN-LAST:event_categoriesValueChanged

    private void highlightingBGChooserHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highlightingBGChooserHandler
        UIConfigurationUtility.colorChooserHandler(this.highlightingBGLabel,
                this.sampleHighlightingBG);
        Color background =
                ConfigurationUtility.getColor1(
                this.highlightingBGLabel.getText());
        getSelectedHighlightColor().setBackground(background);
    }//GEN-LAST:event_highlightingBGChooserHandler

    private void highlightingFGChooserHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highlightingFGChooserHandler
        UIConfigurationUtility.colorChooserHandler(this.highlightingFGLabel,
                this.sampleHighlightingFG);
        Color foreground =
                ConfigurationUtility.getColor1(
                this.highlightingFGLabel.getText());
        getSelectedHighlightColor().setForeground(foreground);
    }//GEN-LAST:event_highlightingFGChooserHandler

    public void applyConfiguration() {
        this.selectedCategory = (String) categories.getSelectedValue();
        this.selectedHighlightColors =
                this.highlightStyleConfig.getHighlightColor(selectedCategory);
        displayHighlightColors();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundColorTitle;
    private javax.swing.JList categories;
    private javax.swing.JLabel categoryTitle;
    private javax.swing.JLabel foregroundColorTitle;
    private javax.swing.JButton highlightingBGChooser;
    private javax.swing.JLabel highlightingBGLabel;
    private javax.swing.JButton highlightingFGChooser;
    private javax.swing.JLabel highlightingFGLabel;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField sampleHighlightingBG;
    private javax.swing.JTextField sampleHighlightingFG;
    // End of variables declaration//GEN-END:variables

    /**
     * Returns a list of highlight categories.
     * @return List of highlight categories.
     */
    private Vector getHighlightCategories() {
        return HighlightCategories.getHighlightCategories();
    }

    /**
     * Returns the selected highlight category.
     * @return The selected highlight category.
     */
    public String getSelectedCategory() {
        return this.selectedCategory;
    }

    /**
     * Returns {@code HighlightColor} for selected highlight category.
     * @return The {@code HighlightColor} for selected highlight category.
     */
    public HighlightColor getSelectedHighlightColor() {
        return this.selectedHighlightColors;
    }

    /**
     * Display highlight colors (background and foreground) for selected highlight
     * category.
     */
    private void displayHighlightColors() {
        //String category = getSelectedCategory();
        HighlightColor highlightColorConfig = getSelectedHighlightColor();
        // Foreground color
        UIConfigurationUtility.showColor(highlightColorConfig.getForeground(),
                highlightingFGLabel,
                sampleHighlightingFG);
        // Background color
        UIConfigurationUtility.showColor(highlightColorConfig.getBackground(),
                highlightingBGLabel,
                sampleHighlightingBG);
    }
}