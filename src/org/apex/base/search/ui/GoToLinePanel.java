/*
 * GoToLinePanel.java
 * Created on May 16, 2007, 2:45 PM
 *
 * Copyright (C) 2008 Mrityunjoy Saha
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package org.apex.base.search.ui;

import org.apex.base.core.EditorBase;
import org.apex.base.data.EditorContext;
import org.apex.base.data.NumericFilter;
import org.apex.base.event.GoToLineEventHandler;
import org.apex.base.logging.Logger;
import org.apex.base.ui.text.GoToLineModel;
import org.apex.base.ui.text.UIDialogModel;
import java.awt.event.KeyEvent;
import javax.swing.JDialog;
import javax.swing.text.AbstractDocument;

/**
 * A form where user can enter a line number to navigate to a line. It makes the target line
 * visible on screen.
 * @author Mrityunjoy Saha
 * @version 1.0
 * @since Apex 1.0
 */
public class GoToLinePanel extends javax.swing.JPanel implements UIDialogModel {

    /**
     * The data model for goto line.
     */
    private GoToLineModel model;
    /**
     * A goto line event handler.
     */
    private GoToLineEventHandler goToEvent;

    /**
     * Creates a new instance of {@code GoToLinePanel} using given
     * goto line data model.
     * @param model The data model for goto line.
     */
    public GoToLinePanel(GoToLineModel model) {
        this.model = model;
        this.goToEvent = new GoToLineEventHandler();
        initComponents();
        applyModel();
    }

    /**
     * Applies the goto line data model to this form.
     */
    private void applyModel() {
        if (this.model.getLineNumber() > 0) {
            this.number.setText(String.valueOf(this.model.getLineNumber()));
            selectFieldText();
        }
    }

    /**
     * Selects the text in 'Line' field.
     */
    private void selectFieldText() {
        if (this.number.getText() != null) {
            this.number.select(0, this.number.getText().length());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        goToChoice = new javax.swing.ButtonGroup();
        goToB = new javax.swing.JButton();
        cancelB = new javax.swing.JButton();
        number = new javax.swing.JTextField();
        ((AbstractDocument)this.number.getDocument()).setDocumentFilter(new NumericFilter(6));
        jLabel1 = new javax.swing.JLabel();

        goToB.setText("Go To");
        goToB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToHandler(evt);
            }
        });

        cancelB.setText("Cancel");
        cancelB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelHandler(evt);
            }
        });

        number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numberKeyPressed(evt);
            }
        });

        jLabel1.setText("Line:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(goToB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(number, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goToB)
                    .addComponent(cancelB))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cancelHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelHandler
        getContainerWindow().setVisible(false);
    }//GEN-LAST:event_cancelHandler

    private void goToHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToHandler
        performGoTo();
    }//GEN-LAST:event_goToHandler

    private void numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            performGoTo();
        }
    }//GEN-LAST:event_numberKeyPressed

    /**
     * Navigates to a target line entered by user.
     */
    private void performGoTo() {
        try {
            this.model.setLineNumber(Integer.parseInt(
                    this.number.getText().trim()));
        } catch (NumberFormatException nfe) {
            Logger.logWarning("Navigation to line: " + this.number.getText() +
                    " failed.", nfe);
        } catch (Exception e) {
            Logger.logWarning("Navigation to line: " + this.number.getText() +
                    " failed.", e);
        }
        if (this.model.getLineNumber() > 1) {
            this.goToEvent.execute(this.model);
        }
        this.getContainerWindow().setVisible(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelB;
    private javax.swing.JButton goToB;
    private javax.swing.ButtonGroup goToChoice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField number;
    // End of variables declaration//GEN-END:variables
    /**
     * The container dialog window.
     */
    private JDialog containerWindow;

    public EditorContext getContext() {
        return EditorBase.getContext();
    }

    public JDialog getContainerWindow() {
        return containerWindow;
    }

    public void setContainerWindow(JDialog containerWindow) {
        this.containerWindow = containerWindow;
        selectFieldText();
    }
}