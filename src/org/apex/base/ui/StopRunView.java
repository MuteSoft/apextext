/*
 * StopRunView.java
 * Created on 7 Jan, 2010, 10:14:12 PM
 *
 * Copyright (C) 2008 Mrityunjoy Saha
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package org.apex.base.ui;

import java.util.List;
import javax.swing.JDialog;
import org.apex.base.component.Console;
import org.apex.base.core.EditorBase;
import org.apex.base.data.EditorContext;
import org.apex.base.settings.ui.text.UIConfigurationUtility;
import org.apex.base.ui.text.UIDialogModel;

/**
 * View used to stop running processes and tools. This view displays a list of running
 * processes and tools. Use has to select one or multiple processes or tools and click on
 * stop button to stop them.
 * @author mrityunjoy_saha
 * @version 1.0
 * @since Apex 1.2
 */
public class StopRunView extends javax.swing.JPanel implements UIDialogModel {

    /**
     * Creates new form StopRunView.
     */
    public StopRunView() {
        initComponents();
        refreshRunningToolList();
    }

    /**
     * Refreshes the list of running tool list. This method should be invoked whenever
     * a tool starts and ends execution.
     */
    public void refreshRunningToolList() {
        this.runningTools.setModel(UIConfigurationUtility.getListModel(
                getRunningTools()));
        this.runningTools.setSelectedIndex(0);
        this.stop.setEnabled(this.runningTools.getModel().getSize() > 0);
    }

    /**
     * Returns a list of currently running tools.
     * @return The list of running tools.
     */
    private List getRunningTools() {
        return getContext().getEditorComponents().getEditorBody().
                getOutputWindow().getActiveConsoles();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        runningTools = new javax.swing.JList();
        cancel = new javax.swing.JButton();
        stop = new javax.swing.JButton();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/apex/base/ui/Bundle"); // NOI18N
        jLabel1.setText(bundle.getString("StopRunView.jLabel1.text")); // NOI18N

        jLabel2.setText(bundle.getString("StopRunView.jLabel2.text")); // NOI18N

        jScrollPane1.setViewportView(runningTools);

        cancel.setText(bundle.getString("StopRunView.cancel.text")); // NOI18N
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        stop.setText(bundle.getString("StopRunView.stop.text")); // NOI18N
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(stop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancel, stop});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(stop))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // Get list of selected consoles to be stopped
        Object[] selectedConsoles = this.runningTools.getSelectedValues();
        // In a loop stop them
        for (Object selectedConsole : selectedConsoles) {
            ((Console) selectedConsole).stopProcess();
        }
        getContainerWindow().setVisible(false);
    }//GEN-LAST:event_stopActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        getContainerWindow().setVisible(false);
    }//GEN-LAST:event_cancelActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList runningTools;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables
    /**
     * The container dialog window.
     */
    private JDialog containerWindow;

    public EditorContext getContext() {
        return EditorBase.getContext();
    }

    public void setContainerWindow(JDialog window) {
        this.containerWindow = window;
    }

    public JDialog getContainerWindow() {
        return this.containerWindow;
    }
}
